// let's imagine this file is autogenerated from the backend
// ideally, we want to keep these api related types in sync
// with the backend instead of manually writing them out

export type BaseEntity = {
  id: string | number;
  createdAt: string;
  updatedAt: string;
};

export type Entity<T> = {
  [K in keyof T]: T[K];
} & BaseEntity;

export type Meta = {
  page: number;
  pageSize: number;
  total: number;
};

export type Paginated<T> = {
  data: T[];
  meta: Meta;
};

export type User = Entity<{
  firstName: string;
  lastName: string;
  email: string;
  role: UserRole;
  avatarUrl?: string;
  additionalInfo?: string;
  isConfirmed?: boolean;
}>;

export type UserRole = 'admin' | 'user' | 'editor';

export type AuthResponse = {
  accessToken: string;
  user: User;
};

export type Team = Entity<{
  name: string;
  description: string;
}>;

export type Discussion = Entity<{
  title: string;
  body: string;
  teamId: string;
  author: User;
}>;

export type Comment = Entity<{
  body: string;
  discussionId: string;
  author: User;
}>;

export type ResourceFileType = 'PDF' | 'DJVU';

export type BaseResource = Entity<{
  title: string;
  previewImageUrl?: string;
  fileName: string;
  fileFormat: ResourceFileType;
  fileSize?: string;
  description?: string;
  publicationDate: string;
  authors: string[];
  keywords?: string[];
  citation?: string;
  category: Pick<Category, 'id' | 'name'>;
  resourceType: Pick<ResourceType, 'id' | 'name'>;
  uploadedBy: Pick<User, 'id' | 'firstName' | 'lastName' | 'email'>;
  additionalInfo?: AdditionalInfo;
}>;

export type ResourceTypeName =
  | 'Книга'
  | 'Стаття'
  | 'Методичні матеріали'
  | 'Посібник'
  | 'Конференційний матеріал'
  | 'Дисертація'
  | 'Реферат'
  | 'Звіт';

export type ResourceType = Entity<{
  name: ResourceTypeName; // ResourceTypeName
  description?: string;
}>;

export type CategoryName =
  | 'Алгоритми'
  | 'Системне програмування'
  | 'Мережеві технології'
  | 'Бази даних'
  | 'Штучний інтелект'
  | 'Інформаційна безпека'
  | 'Вбудовані системи'
  | 'Розподілені системи'
  | 'Фізика'
  | 'Квантова фізика'
  | 'Вища математика'
  | 'Електроніка'
  | 'Радіофізика'
  | "Комп'ютерні системи"
  | 'Інше';

export type Category = Entity<{
  name: CategoryName; // CategoryName
  description?: string;
}>;

export type AdditionalInfo =
  | BookAdditionalInfo
  | ArticleAdditionalInfo
  | MethodicalAdditionalInfo
  | ManualAdditionalInfo
  | ConferenceAdditionalInfo
  | DissertationAdditionalInfo
  | AbstractAdditionalInfo
  | ReportAdditionalInfo;

/**
 * Додаткова інформація для ресурсу типу "Книга".
 */
export interface BookAdditionalInfo {
  /** Міжнародний стандартний номер книги (ISBN) */
  ISBN: string;
  /** Видавництво книги */
  publisher: string;
  /** Кількість сторінок */
  numberOfPages: number;
  /** Мова видання книги */
  language: string;
  /** Видання (опціонально) */
  edition?: string;
}

/**
 * Додаткова інформація для ресурсу типу "Стаття".
 */
export interface ArticleAdditionalInfo {
  /** Назва журналу, в якому опублікована стаття */
  journalName: string;
  /** Том журналу (може бути числовим або текстовим) */
  volume: string | number;
  /** Номер випуску (issue) журналу */
  issue: string | number;
  /** Сторінки, на яких знаходиться стаття */
  pages: string;
  /** Digital Object Identifier (DOI) статті */
  DOI: string;
}

/**
 * Додаткова інформація для ресурсу типу "Методичні матеріали".
 */
export interface MethodicalAdditionalInfo {
  /** Назва курсу, до якого стосуються матеріали */
  courseName: string;
  /** Предмет (опціонально) */
  subject?: string;
  /** Академічний рік (опціонально) */
  academicYear?: string;
}

/**
 * Додаткова інформація для ресурсу типу "Посібник".
 */
export interface ManualAdditionalInfo {
  /** Версія посібника (опціонально) */
  version?: string;
  /** Видавництво посібника (опціонально) */
  publisher?: string;
  /** Мова посібника (опціонально) */
  language?: string;
}

/**
 * Додаткова інформація для ресурсу типу "Конференційний матеріал".
 */
export interface ConferenceAdditionalInfo {
  /** Назва конференції */
  conferenceName: string;
  /** Місце проведення конференції */
  location: string;
  /** Дата проведення конференції */
  conferenceDate: Date;
}

/**
 * Додаткова інформація для ресурсу типу "Дисертація".
 */
export interface DissertationAdditionalInfo {
  /** Науковий ступінь, за який подається дисертація */
  degree: string;
  /** Ім'я наукового керівника */
  advisor: string;
  /** Назва навчального закладу */
  institution: string;
  /** Дата захисту дисертації */
  defenseDate: Date;
}

/**
 * Додаткова інформація для ресурсу типу "Реферат".
 */
export interface AbstractAdditionalInfo {
  /** Тема реферату */
  topic: string;
  /** Короткий виклад або резюме (опціонально) */
  summary?: string;
}

/**
 * Додаткова інформація для ресурсу типу "Звіт".
 */
export interface ReportAdditionalInfo {
  /** Назва організації, що видає звіт */
  organization: string;
  /** Номер звіту (опціонально) */
  reportNumber?: string;
  /** Дата звіту */
  reportDate: Date;
}

// ========== Iнтерфейси ресурсів ==========

/**
 * Інтерфейс ресурсу типу "Книга".
 */
export interface BookResource extends BaseResource {
  /** Тип ресурсу – літеральне значення "Книга" */
  resourceType: {
    id: ResourceType['id'];
    name: 'Книга';
  };
  /** Додаткова інформація для книги */
  additionalInfo?: BookAdditionalInfo;
}

/**
 * Інтерфейс ресурсу типу "Стаття".
 */
export interface ArticleResource extends BaseResource {
  /** Тип ресурсу – літеральне значення "Стаття" */
  resourceType: {
    id: ResourceType['id'];
    name: 'Стаття';
  };
  /** Додаткова інформація для статті */
  additionalInfo?: ArticleAdditionalInfo;
}

/**
 * Інтерфейс ресурсу типу "Методичні матеріали".
 */
export interface MethodicalResource extends BaseResource {
  /** Тип ресурсу – літеральне значення "Методичні матеріали" */
  resourceType: {
    id: ResourceType['id'];
    name: 'Методичні матеріали';
  };
  /** Додаткова інформація для методичних матеріалів */
  additionalInfo?: MethodicalAdditionalInfo;
}

/**
 * Інтерфейс ресурсу типу "Посібник".
 */
export interface ManualResource extends BaseResource {
  /** Тип ресурсу – літеральне значення "Посібник" */
  resourceType: {
    id: ResourceType['id'];
    name: 'Посібник';
  };
  /** Додаткова інформація для посібника */
  additionalInfo?: ManualAdditionalInfo;
}

/**
 * Інтерфейс ресурсу типу "Конференційний матеріал".
 */
export interface ConferenceResource extends BaseResource {
  /** Тип ресурсу – літеральне значення "Конференційний матеріал" */
  resourceType: {
    id: ResourceType['id'];
    name: 'Конференційний матеріал';
  };
  /** Додаткова інформація для конференційного матеріалу */
  additionalInfo?: ConferenceAdditionalInfo;
}

/**
 * Інтерфейс ресурсу типу "Дисертація".
 */
export interface DissertationResource extends BaseResource {
  /** Тип ресурсу – літеральне значення "Дисертація" */
  resourceType: {
    id: ResourceType['id'];
    name: 'Дисертація';
  };
  /** Додаткова інформація для дисертації */
  additionalInfo?: DissertationAdditionalInfo;
}

/**
 * Інтерфейс ресурсу типу "Реферат".
 */
export interface AbstractResource extends BaseResource {
  /** Тип ресурсу – літеральне значення "Реферат" */
  resourceType: {
    id: ResourceType['id'];
    name: 'Реферат';
  };
  /** Додаткова інформація для реферату */
  additionalInfo?: AbstractAdditionalInfo;
}

/**
 * Інтерфейс ресурсу типу "Звіт".
 */
export interface ReportResource extends BaseResource {
  /** Тип ресурсу – літеральне значення "Звіт" */
  resourceType: {
    id: ResourceType['id'];
    name: 'Звіт';
  };
  /** Додаткова інформація для звіту */
  additionalInfo?: ReportAdditionalInfo;
}

/**
 * Об'єднаний тип для всіх ресурсів.
 */
export type Resource =
  | BookResource
  | ArticleResource
  | MethodicalResource
  | ManualResource
  | ConferenceResource
  | DissertationResource
  | AbstractResource
  | ReportResource;

export type SavedResource = Entity<{
  resourceId: Resource['id'];
  userId: User['id'];
}>;

export type ResourceWithSavedStatus = Resource & {
  isSaved: boolean;
};
