services:
  postgres-db:
    image: postgres:latest
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./apps/api/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - libhub-network

  minio-server:
    image: minio/minio:latest
    restart: always
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
      MINIO_BROWSER_PORT: ${MINIO_BROWSER_PORT}
    volumes:
      - ./minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - libhub-network

  api:
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
    ports:
      - '3002:3002'
    depends_on:
      postgres-db:
        condition: service_healthy
      minio-server:
        condition: service_healthy
    environment:
      DATABASE_URL: 'postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-db:5432/${POSTGRES_DB}?schema=public'
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_PORT: 9000
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_FILES_BUCKET_NAME: ${MINIO_FILES_BUCKET_NAME}
      JWT_SECRET: <>
      JWT_ACCESS_TOKEN_EXPIRES_IN: 86400

    networks:
      - libhub-network

  web:
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
      args:
        - VITE_APP_API_URL=${VITE_APP_API_URL}
    ports:
      - '3000:3000'
    environment:
      VITE_APP_API_URL: ${VITE_APP_API_URL}

    networks:
      - libhub-network

networks:
  libhub-network:
    driver: bridge
